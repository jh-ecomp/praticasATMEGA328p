
Pratica 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000120  000001b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000120  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800110  00800110  000001c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000767  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000065d  00000000  00000000  000009cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000415  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00001440  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006cef  00000000  00000000  000014a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000063  00000000  00000000  00008193  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000081f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000000ae  00000000  00000000  00008216  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3d c0       	rjmp	.+122    	; 0xa0 <__vector_9>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e2       	ldi	r30, 0x20	; 32
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 31       	cpi	r26, 0x14	; 20
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	35 d0       	rcall	.+106    	; 0x106 <main>
  9c:	3f c0       	rjmp	.+126    	; 0x11c <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <__vector_9>:
	
	/************TIMER 2 CONFIG************/
	TCCR2A = 0x00;	//OC0A and OC0B disconnected;
	TCCR2B = 0x06;	//no force OC0A,B pins; prescale = 256
	TCNT2  = 0x00;
	TIMSK2 = 0x01;
  a0:	1f 92       	push	r1
  a2:	0f 92       	push	r0
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	0f 92       	push	r0
  a8:	11 24       	eor	r1, r1
  aa:	8f 93       	push	r24
  ac:	9f 93       	push	r25
  ae:	ef 93       	push	r30
  b0:	ff 93       	push	r31
  b2:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <muxcont>
  b6:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <muxcont+0x1>
  ba:	e0 50       	subi	r30, 0x00	; 0
  bc:	ff 4f       	sbci	r31, 0xFF	; 255
  be:	80 81       	ld	r24, Z
  c0:	85 b9       	out	0x05, r24	; 5
  c2:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <muxcont>
  c6:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <muxcont+0x1>
  ca:	e0 5f       	subi	r30, 0xF0	; 240
  cc:	fe 4f       	sbci	r31, 0xFE	; 254
  ce:	80 81       	ld	r24, Z
  d0:	8b b9       	out	0x0b, r24	; 11
  d2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <muxcont>
  d6:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <muxcont+0x1>
  da:	01 96       	adiw	r24, 0x01	; 1
  dc:	81 70       	andi	r24, 0x01	; 1
  de:	90 78       	andi	r25, 0x80	; 128
  e0:	99 23       	and	r25, r25
  e2:	24 f4       	brge	.+8      	; 0xec <__vector_9+0x4c>
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	8e 6f       	ori	r24, 0xFE	; 254
  e8:	9f 6f       	ori	r25, 0xFF	; 255
  ea:	01 96       	adiw	r24, 0x01	; 1
  ec:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <muxcont+0x1>
  f0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <muxcont>
  f4:	ff 91       	pop	r31
  f6:	ef 91       	pop	r30
  f8:	9f 91       	pop	r25
  fa:	8f 91       	pop	r24
  fc:	0f 90       	pop	r0
  fe:	0f be       	out	0x3f, r0	; 63
 100:	0f 90       	pop	r0
 102:	1f 90       	pop	r1
 104:	18 95       	reti

00000106 <main>:


int main (void)
{

	sei();
 106:	78 94       	sei
	/* Insert application code here, after the board has been initialized. */
	display[0] = D7S[0];
 108:	e0 e1       	ldi	r30, 0x10	; 16
 10a:	f1 e0       	ldi	r31, 0x01	; 1
 10c:	a2 e0       	ldi	r26, 0x02	; 2
 10e:	b1 e0       	ldi	r27, 0x01	; 1
 110:	8c 91       	ld	r24, X
 112:	80 83       	st	Z, r24
	display[1] = D7S[1];
 114:	11 96       	adiw	r26, 0x01	; 1
 116:	8c 91       	ld	r24, X
 118:	81 83       	std	Z+1, r24	; 0x01
 11a:	ff cf       	rjmp	.-2      	; 0x11a <main+0x14>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
