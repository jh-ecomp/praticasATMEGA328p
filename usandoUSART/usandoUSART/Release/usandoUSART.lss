
usandoUSART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000166  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000166  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000d6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000ea1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	41 c0       	rjmp	.+130    	; 0x88 <__bad_interrupt>
   6:	00 00       	nop
   8:	3f c0       	rjmp	.+126    	; 0x88 <__bad_interrupt>
   a:	00 00       	nop
   c:	3d c0       	rjmp	.+122    	; 0x88 <__bad_interrupt>
   e:	00 00       	nop
  10:	3b c0       	rjmp	.+118    	; 0x88 <__bad_interrupt>
  12:	00 00       	nop
  14:	39 c0       	rjmp	.+114    	; 0x88 <__bad_interrupt>
  16:	00 00       	nop
  18:	37 c0       	rjmp	.+110    	; 0x88 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	35 c0       	rjmp	.+106    	; 0x88 <__bad_interrupt>
  1e:	00 00       	nop
  20:	33 c0       	rjmp	.+102    	; 0x88 <__bad_interrupt>
  22:	00 00       	nop
  24:	31 c0       	rjmp	.+98     	; 0x88 <__bad_interrupt>
  26:	00 00       	nop
  28:	2f c0       	rjmp	.+94     	; 0x88 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2d c0       	rjmp	.+90     	; 0x88 <__bad_interrupt>
  2e:	00 00       	nop
  30:	2b c0       	rjmp	.+86     	; 0x88 <__bad_interrupt>
  32:	00 00       	nop
  34:	29 c0       	rjmp	.+82     	; 0x88 <__bad_interrupt>
  36:	00 00       	nop
  38:	27 c0       	rjmp	.+78     	; 0x88 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	25 c0       	rjmp	.+74     	; 0x88 <__bad_interrupt>
  3e:	00 00       	nop
  40:	23 c0       	rjmp	.+70     	; 0x88 <__bad_interrupt>
  42:	00 00       	nop
  44:	21 c0       	rjmp	.+66     	; 0x88 <__bad_interrupt>
  46:	00 00       	nop
  48:	1f c0       	rjmp	.+62     	; 0x88 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1d c0       	rjmp	.+58     	; 0x88 <__bad_interrupt>
  4e:	00 00       	nop
  50:	1b c0       	rjmp	.+54     	; 0x88 <__bad_interrupt>
  52:	00 00       	nop
  54:	19 c0       	rjmp	.+50     	; 0x88 <__bad_interrupt>
  56:	00 00       	nop
  58:	17 c0       	rjmp	.+46     	; 0x88 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	15 c0       	rjmp	.+42     	; 0x88 <__bad_interrupt>
  5e:	00 00       	nop
  60:	13 c0       	rjmp	.+38     	; 0x88 <__bad_interrupt>
  62:	00 00       	nop
  64:	11 c0       	rjmp	.+34     	; 0x88 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	2e d0       	rcall	.+92     	; 0xe2 <main>
  86:	33 c0       	rjmp	.+102    	; 0xee <_exit>

00000088 <__bad_interrupt>:
  88:	bb cf       	rjmp	.-138    	; 0x0 <__vectors>

0000008a <setup>:
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	8a b9       	out	0x0a, r24	; 10
  8e:	8c ef       	ldi	r24, 0xFC	; 252
  90:	8b b9       	out	0x0b, r24	; 11
  92:	14 bc       	out	0x24, r1	; 36
  94:	84 e0       	ldi	r24, 0x04	; 4
  96:	85 bd       	out	0x25, r24	; 37
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  9e:	16 bc       	out	0x26, r1	; 38
  a0:	87 e6       	ldi	r24, 0x67	; 103
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  ac:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  b8:	88 e1       	ldi	r24, 0x18	; 24
  ba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  be:	8e e0       	ldi	r24, 0x0E	; 14
  c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  c4:	08 95       	ret

000000c6 <USART_Transmit>:
  c6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  ca:	95 ff       	sbrs	r25, 5
  cc:	fc cf       	rjmp	.-8      	; 0xc6 <USART_Transmit>
  ce:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  d2:	08 95       	ret

000000d4 <USART_Receive>:
  d4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  d8:	87 ff       	sbrs	r24, 7
  da:	fc cf       	rjmp	.-8      	; 0xd4 <USART_Receive>
  dc:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  e0:	08 95       	ret

000000e2 <main>:
  e2:	d3 df       	rcall	.-90     	; 0x8a <setup>
  e4:	78 94       	sei
  e6:	f6 df       	rcall	.-20     	; 0xd4 <USART_Receive>
  e8:	81 e6       	ldi	r24, 0x61	; 97
  ea:	ed df       	rcall	.-38     	; 0xc6 <USART_Transmit>
  ec:	fc cf       	rjmp	.-8      	; 0xe6 <main+0x4>

000000ee <_exit>:
  ee:	f8 94       	cli

000000f0 <__stop_program>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <__stop_program>
